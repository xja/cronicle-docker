# .acme.sh/acme.sh --issue -d cronicle.example.com -w /usr/share/nginx/html --log

# generated 2023-04-17, Mozilla Guideline v5.6, nginx 1.23.4, OpenSSL 1.1.1n, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.23.4&config=intermediate&openssl=1.1.1n&guideline=5.6
server {
    listen 80;
    server_name cronicle.example.com;

    location /.well-known/ {
        root /usr/share/nginx/html;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name cronicle.example.com;

    access_log /var/log/nginx/cronicle.access.log;
    error_log  /var/log/nginx/cronicle.error.log debug;

    ssl_certificate     /home/user1/.acme.sh/cronicle.example.com_ecc/fullchain.cer;
    ssl_certificate_key /home/user1/.acme.sh/cronicle.example.com_ecc/cronicle.example.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache   shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam /etc/ssl/dhparam;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /home/user1/.acme.sh/cronicle.example.com_ecc/ca.cer;

    # replace with the IP address of your resolver
    #resolver 127.0.0.1;

    # Reverse proxy
    location / {
        proxy_pass http://127.0.0.1:3012;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Scheme $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}